---
description: React Component Patterns
globs: **/components/**/*.tsx
alwaysApply: false
---
- Use functional components with TypeScript
- Implement proper prop typing using interfaces
- Use Tailwind CSS for all styling needs
- Follow atomic design principles for component organization
- Implement proper error boundaries
- Use React hooks effectively
- Add appropriate accessibility attributes (aria-* props, role, etc.)
- Use compound components pattern for complex UI components
- Implement test coverage for all components
- Use memoization (React.memo, useMemo, useCallback) for performance optimization
- Create custom hooks for reusable logic
- Use Context API for state management that spans multiple components
- Implement lazy loading for components when beneficial
- Add proper keyboard navigation support
- Use composition over inheritance for component structure
- Add detailed JSDoc comments for component props