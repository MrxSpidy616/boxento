@tailwind base;
@tailwind components;
@tailwind utilities;

/* Basic layout */
:root {
  --border-radius-standard: 1.9rem;
}

body {
  @apply m-0 antialiased;
}

/* Global style to prevent any text selection when dragging/resizing occurs */
body.dragging-active {
  @apply select-none cursor-move;
  -webkit-touch-callout: none !important;
}

/* Widget container - contains styling ONLY for widgets themselves */
.widget-container {
  border-radius: var(--border-radius-standard);
  @apply shadow-md p-4 overflow-hidden h-full w-full flex flex-col relative border border-black/5 dark:border-white/5 break-words;
  /* Prevent text selection during any interaction */
  -webkit-touch-callout: none; /* iOS Safari */
}

/* Notes widget specific styling */
.widget-container.notes-widget {
  @apply bg-amber-50 dark:bg-slate-800;
}

/* Default styling for other widgets */
.widget-container:not(.notes-widget) {
  @apply bg-white dark:bg-slate-800;
}

/* Fix for the drag handle */
.widget-drag-handle {
  @apply cursor-move touch-none select-none;
}

/* Non-draggable widget content */
.widget-container > div:not(.widget-drag-handle) {
  @apply cursor-default pointer-events-auto;
}

/* Special handling for the QuickLinks widget buttons */
.widget-container button[class*="hover:bg-gray"] {
  @apply cursor-pointer pointer-events-auto;
}

/* Make all links inside widgets explicitly clickable */
.widget-container a,
.widget-container button:not(.settings-button) {
  @apply cursor-pointer pointer-events-auto relative z-10;
}

/* Ensure the widget content is visible and clickable */
.widget-container *:not(.widget-drag-handle):not(.settings-button) {
  @apply pointer-events-auto;
}

.widget-container .settings-button {
  @apply cursor-pointer z-10 opacity-0 transition-opacity duration-200 ease-in-out pointer-events-auto;
  border-radius: var(--border-radius-standard);
}

.widget-container:hover .settings-button {
  @apply opacity-100;
}

/* Make sure clicks on settings buttons are never blocked */
.settings-button,
.settings-button * {
  @apply pointer-events-auto;
}

/* Basic container - completely unstyled */
.grid-item-container {
  @apply p-0 bg-transparent h-full w-full;
}

/* Base widget styling with enhanced selection prevention */
.react-grid-item {
  @apply transition-all duration-200 ease-in-out;
  -webkit-user-drag: none; /* Prevent dragging of content */
}

/* Apply selection prevention immediately on mousedown */
.react-grid-item:active,
.react-grid-item:focus {
  @apply select-none;
}

.react-grid-item:active *,
.react-grid-item:focus * {
  @apply select-none;
}

/* Specific styling for dragging state */
.react-grid-item.react-draggable-dragging {
  @apply z-[100] transition-none pointer-events-none;
}

/* Specific styling for resize state */
.react-grid-item.resizing {
  @apply z-10 transition-none;
}

/* Comprehensive selection prevention for all interaction states */
.react-grid-item,
.react-grid-item.react-draggable-dragging,
.react-grid-item.resizing {
  @apply touch-none select-none;
}

/* Apply to the entire grid */
.react-grid-layout {
  @apply relative;
  -webkit-user-drag: none;
}

.react-grid-layout--dragging,
.react-grid-layout--resizing {
  @apply cursor-move select-none;
}

.react-grid-layout--dragging *,
.react-grid-layout--resizing * {
  @apply select-none;
  cursor: inherit !important;
}

/* Ensure the placeholder is under the dragged widget */
.react-grid-item.react-grid-placeholder {
  @apply bg-gray-200 dark:bg-gray-600 opacity-60 shadow-inner shadow-black/10 dark:shadow-black/30 z-[1] duration-200;
  border-radius: var(--border-radius-standard); /* Match widget-container border-radius */
}

/* Curved corner resize handle with aggressive styling */
.react-resizable-handle,
.react-resizable .react-resizable-handle,
.react-grid-item .react-resizable-handle {
  @apply absolute w-[30px] h-[30px] bottom-0 right-0 bg-none pointer-events-auto 
         cursor-se-resize z-10 opacity-0 transition-opacity duration-300 ease-in-out;
}

/* Create a larger, more prominent curved corner effect */
.react-resizable-handle::after,
.react-resizable .react-resizable-handle::after,
.react-grid-item .react-resizable-handle::after {
  @apply content-[''] absolute bottom-1 right-1 w-[30px] h-[30px] border-b-2 border-r-2 border-black/20 dark:border-white/30;
  border-radius: 0 0 var(--border-radius-standard) 0;
}

/* Show resize handle on hover */
.widget-container:hover .react-resizable-handle,
.react-grid-item:hover .react-resizable-handle {
  @apply opacity-100;
}

/* Remove these custom classes that might interfere with default behavior */
/* 
.react-grid-item.cssTransforms {
  transition-property: transform;
  transition-duration: 0.2s;
}

.react-grid-item.moving {
  transition: none !important;
}
*/

/* App Header Styles */
.app-header {
  @apply fixed top-0 left-0 right-0 p-2 md:px-6 backdrop-blur-sm z-40 bg-transparent;
}

.header-container {
  @apply max-w-[1600px] mx-auto flex justify-between items-center px-6 py-0;
}

.header-left {
  @apply flex items-center gap-4;
}

.app-title {
  @apply text-xl font-bold text-gray-900 dark:text-gray-50;
}

.header-right {
  @apply flex items-center gap-3;
}

.header-button {
  @apply flex items-center gap-2 px-4 py-2.5 rounded-lg 
         bg-blue-500 dark:bg-blue-600 text-white 
         text-sm font-medium transition-all duration-200
         shadow-sm hover:shadow-md hover:bg-blue-600 dark:hover:bg-blue-700
         focus:outline-none focus:ring-2 focus:ring-blue-500/30 focus:ring-offset-2 dark:focus:ring-offset-gray-900;
}

.header-button svg {
  @apply transition-transform duration-200;
}

.header-button:hover svg {
  @apply transform rotate-90;
}

.theme-toggle-button {
  @apply p-2.5 rounded-full bg-white dark:bg-gray-800 shadow-sm
         hover:shadow-md transition-all duration-200
         text-gray-700 dark:text-yellow-400
         focus:outline-none focus:ring-2 focus:ring-blue-500/30 focus:ring-offset-2 dark:focus:ring-offset-gray-900;
}

/* Widget Selector Styles */
.widget-selector-overlay {
  @apply fixed inset-0 bg-black/60 backdrop-blur-sm flex justify-center items-center z-50 p-4
         opacity-0 transition-opacity duration-300 ease-in-out;
  animation: fadeIn 0.3s forwards;
}

@keyframes fadeIn {
  to { opacity: 1; }
}

.widget-selector-modal {
  @apply bg-white dark:bg-gray-800 rounded-xl shadow-2xl dark:border dark:border-gray-700
         w-full max-w-4xl max-h-[85vh] overflow-hidden flex flex-col
         transform scale-95 transition-all duration-300;
  animation: scaleIn 0.3s forwards;
}

@keyframes scaleIn {
  to { transform: scale(1); }
}

.widget-selector-header {
  @apply flex justify-between items-center p-5 md:p-6 border-b border-gray-200 dark:border-gray-700;
}

.widget-selector-header h3 {
  @apply text-xl font-bold text-gray-800 dark:text-white;
}

.widget-selector-header button {
  @apply p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200;
}

.widget-selector-search {
  @apply relative p-5 md:p-6 border-b border-gray-200 dark:border-gray-700;
}

.search-icon {
  @apply absolute left-8 top-1/2 -translate-y-1/2 text-gray-400;
}

.widget-search-input {
  @apply w-full py-3 px-5 pl-10 rounded-lg border border-gray-200 dark:border-gray-600
         bg-gray-50 dark:bg-gray-700 text-sm text-gray-900 dark:text-gray-100
         focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500/30
         transition-all duration-200;
}

.widget-selector-categories,
.widget-selector-results {
  @apply p-5 md:p-6 overflow-y-auto flex-1;
}

.widget-category {
  @apply mb-8;
}

.widget-category-header {
  @apply flex justify-between items-center w-full py-2 px-1 mb-4 
         transition-colors duration-200 hover:text-blue-600 dark:hover:text-blue-400;
}

.widget-category-title {
  @apply text-base font-semibold text-gray-700 dark:text-gray-200;
}

.widget-grid {
  @apply grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4;
}

.widget-item {
  @apply flex items-start gap-3 p-4 rounded-lg border border-gray-200 dark:border-gray-600
         bg-white dark:bg-gray-700 text-left transition-all duration-200
         hover:bg-blue-50 dark:hover:bg-blue-900/20 hover:border-blue-200 dark:hover:border-blue-700 
         hover:shadow-md hover:scale-[1.02] focus:outline-none focus:ring-2 focus:ring-blue-500/30;
}

.widget-icon {
  @apply flex items-center justify-center w-11 h-11 rounded-lg bg-blue-100 dark:bg-blue-900/30 
         text-blue-600 dark:text-blue-400 transition-all duration-200
         group-hover:bg-blue-500 group-hover:text-white;
}

.widget-info {
  @apply flex flex-col flex-1 pt-1;
}

.widget-name {
  @apply font-medium text-gray-900 dark:text-white text-sm;
}

.widget-description {
  @apply text-xs text-gray-500 dark:text-gray-400 mt-1 line-clamp-2;
}

.no-results {
  @apply text-center py-8 text-gray-500 dark:text-gray-400 text-sm;
}

.dashboard-container {
  @apply px-6 max-w-[1600px] mx-auto;
}

/* Empty dashboard call to action */
.empty-dashboard-cta {
  @apply flex flex-col items-center justify-center h-[80vh] px-4 text-center;
}

.empty-dashboard-cta p {
  @apply text-2xl font-medium text-gray-600 dark:text-gray-300 mb-8;
}

.empty-dashboard-cta .illustration {
  @apply w-64 h-64 mb-8 opacity-80;
}

.add-widget-button {
  @apply flex items-center gap-2 py-3.5 px-6 bg-blue-500 text-white font-medium rounded-xl
         shadow-md shadow-blue-500/20 dark:shadow-blue-500/40 transition-all duration-200
         hover:bg-blue-600 hover:shadow-lg hover:shadow-blue-500/30 dark:hover:shadow-blue-500/50 
         hover:-translate-y-0.5 text-base focus:outline-none focus:ring-2 focus:ring-blue-500/30 focus:ring-offset-2;
}

.add-widget-button svg {
  @apply transition-transform duration-200;
}

.add-widget-button:hover svg {
  @apply transform rotate-90;
}

/* Override for widget buttons to ensure they're always clickable */
.widget-container button {
  @apply pointer-events-auto relative z-50;
}

/* When drag is complete, ensure buttons are REALLY clickable */
body.drag-complete .widget-container button {
  @apply pointer-events-auto relative z-[9999];
}

/* Temporarily disable dragging during the click window after drag/resize completes */
body.drag-complete .react-grid-item {
  @apply transition-transform duration-300 ease-in-out;
}

/* This style was updated and moved below */

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground transition-colors duration-200;
  }
  
  /* Explicitly set dark mode colors on body and html for better compatibility */
  html.dark,
  body.dark {
    @apply bg-slate-900 text-white;
  }
}