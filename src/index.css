@tailwind base;
@tailwind components;
@tailwind utilities;

/* Basic layout */
:root {
  --border-radius-standard: 1.9rem;
}

body {
  margin: 0;
  /* Removing the font-family declaration to use Tailwind's Inter font */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Global style to prevent any text selection when dragging/resizing occurs */
body.dragging-active {
  -webkit-touch-callout: none !important;
  -webkit-user-select: none !important;
  -khtml-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
  cursor: move !important;
}

/* Widget container - contains styling ONLY for widgets themselves */
.widget-container {
  border-radius: var(--border-radius-standard);
  background-color: white;
  box-shadow: 0 4px 10px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  padding: 1rem;
  overflow: hidden; /* Ensure content never causes overflow */
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
  border: 1px solid rgba(0, 0, 0, 0.05);
  /* Ensure text wrapping */
  word-wrap: break-word;
  word-break: break-word;
  /* Prevent text selection during any interaction */
  -webkit-touch-callout: none; /* iOS Safari */
}

.dark .widget-container {
  background-color: #1f2937; /* dark:bg-gray-800 */
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.widget-container .settings-button {
  cursor: pointer;
  border-radius: var(--border-radius-standard);
  z-index: 10;
  opacity: 0; /* Hide by default */
  transition: opacity 0.2s ease-in-out;
  pointer-events: auto;
}

.widget-container:hover .settings-button {
  opacity: 1; /* Show on hover */
}

/* Make sure clicks on settings buttons are never blocked */
.settings-button,
.settings-button * {
  pointer-events: auto !important;
}

/* Basic container - completely unstyled */
.grid-item-container {
  padding: 0;
  background: transparent;
  height: 100%;
  width: 100%;
}

/* Base widget styling with enhanced selection prevention */
.react-grid-item {
  transition: all 200ms ease;
  -webkit-user-drag: none; /* Prevent dragging of content */
}

/* Apply selection prevention immediately on mousedown */
.react-grid-item:active,
.react-grid-item:focus {
  user-select: none !important;
}

.react-grid-item:active *,
.react-grid-item:focus * {
  user-select: none !important;
}

/* Specific styling for dragging state */
.react-grid-item.react-draggable-dragging {
  z-index: 100;
  transition: none;
  pointer-events: none;
}

/* Specific styling for resize state */
.react-grid-item.resizing {
  z-index: 10;
  transition: none;
}

/* Comprehensive selection prevention for all interaction states */
.react-grid-item,
.react-grid-item.react-draggable-dragging,
.react-grid-item.resizing {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  touch-action: none;
}

/* Apply to the entire grid */
.react-grid-layout {
  position: relative;
  -webkit-user-drag: none;
}

.react-grid-layout--dragging,
.react-grid-layout--resizing {
  cursor: move;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.react-grid-layout--dragging *,
.react-grid-layout--resizing * {
  cursor: inherit !important;
  -webkit-touch-callout: none !important;
  -webkit-user-select: none !important;
  -khtml-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}

/* Ensure the placeholder is under the dragged widget */
.react-grid-item.react-grid-placeholder {
  background: #e5e7eb; /* light gray (equivalent to Tailwind's gray-200) */
  opacity: 0.6;
  border-radius: var(--border-radius-standard); /* Match widget-container border-radius */
  transition-duration: 200ms;
  z-index: 1; /* Ensure placeholder is below the widget being manipulated */
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1); /* Add subtle inset shadow for depth */
}

.dark .react-grid-item.react-grid-placeholder {
  background: #4b5563; /* dark gray (equivalent to Tailwind's gray-600) for dark mode */
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3); /* Darker inset shadow for dark mode */
}

/* Curved corner resize handle with aggressive styling */
.react-resizable-handle,
.react-resizable .react-resizable-handle,
.react-grid-item .react-resizable-handle {
  position: absolute !important;
  width: 30px !important;
  height: 30px !important;
  bottom: 0 !important;
  right: 0 !important;
  background-image: none !important;
  pointer-events: all !important;
  cursor: se-resize !important;
  z-index: 10 !important;
  opacity: 0 !important; /* Hidden by default */
  transition: opacity 0.3s ease !important; /* Smooth transition */
}

/* Create a larger, more prominent curved corner effect */
.react-resizable-handle::after,
.react-resizable .react-resizable-handle::after,
.react-grid-item .react-resizable-handle::after {
  content: "" !important;
  position: absolute !important;
  bottom: 4px !important;
  right: 4px !important;
  width: 30px !important;
  height: 30px !important;
  border-radius: 0 0 var(--border-radius-standard) 0 !important;
  border-bottom: 2px solid rgba(0, 0, 0, 0.2) !important;
  border-right: 2px solid rgba(0, 0, 0, 0.2) !important;
}

/* Show resize handle on hover */
.widget-container:hover .react-resizable-handle,
.react-grid-item:hover .react-resizable-handle {
  opacity: 1 !important;
}

/* Dark mode version with higher contrast */
.dark .react-resizable-handle::after,
.dark .react-resizable .react-resizable-handle::after,
.dark .react-grid-item .react-resizable-handle::after {
  border-bottom: 2px solid rgba(255, 255, 255, 0.3) !important;
  border-right: 2px solid rgba(255, 255, 255, 0.3) !important;
}

/* Remove these custom classes that might interfere with default behavior */
/* 
.react-grid-item.cssTransforms {
  transition-property: transform;
  transition-duration: 0.2s;
}

.react-grid-item.moving {
  transition: none !important;
}
*/

/* App Header Styles */
.app-header {
  padding: 1rem 1.5rem;
  backdrop-filter: blur(8px);
}

.dark .app-header {
  backdrop-filter: blur(8px);
}

.header-container {
  max-width: 1600px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 1.5rem;
}

.header-left {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.app-title {
  font-size: 1.5rem;
  font-weight: 700;
  color: #111827;
}

.dark .app-title {
  color: #f9fafb;
}

.header-right {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.header-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  border-radius: 0.5rem;
  background-color: white;
  border: 1px solid #e5e7eb;
  color: #4b5563;
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s ease;
}

.dark .header-button {
  background-color: #374151;
  border-color: #4b5563;
  color: #e5e7eb;
}

.header-button:hover {
  background-color: #f9fafb;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.dark .header-button:hover {
  background-color: #4b5563;
}

/* Widget Selector Styles */
.widget-selector-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(2px);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 50;
  padding: 1rem;
}

.widget-selector-modal {
  background-color: white;
  border-radius: 0.75rem;
  box-shadow: 0 4px 20px -1px rgba(0, 0, 0, 0.1), 0 2px 10px -1px rgba(0, 0, 0, 0.06);
  width: 100%;
  max-width: 800px;
  max-height: 80vh;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.dark .widget-selector-modal {
  background-color: #1f2937;
  border: 1px solid #374151;
}

.widget-selector-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid #e5e7eb;
}

.dark .widget-selector-header {
  border-bottom-color: #374151;
}

.widget-selector-search {
  position: relative;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid #e5e7eb;
}

.dark .widget-selector-search {
  border-bottom-color: #374151;
}

.search-icon {
  position: absolute;
  left: 2rem;
  top: 50%;
  transform: translateY(-50%);
  color: #9ca3af;
}

.widget-search-input {
  width: 100%;
  padding: 0.625rem 1rem 0.625rem 2.5rem;
  border-radius: 0.375rem;
  border: 1px solid #e5e7eb;
  background-color: #f9fafb;
  font-size: 0.875rem;
}

.dark .widget-search-input {
  background-color: #374151;
  border-color: #4b5563;
  color: #f9fafb;
}

.widget-search-input:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3);
}

.widget-selector-categories,
.widget-selector-results {
  padding: 1rem 1.5rem;
}

.widget-category {
  margin-bottom: 1.5rem;
}

.widget-category-title {
  font-size: 1rem;
  font-weight: 600;
  margin-bottom: 0.75rem;
  color: #4b5563;
}

.dark .widget-category-title {
  color: #d1d5db;
}

.widget-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 0.75rem;
}

.widget-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem;
  border-radius: 0.5rem;
  border: 1px solid #e5e7eb;
  background-color: white;
  text-align: left;
  transition: all 0.2s ease;
}

.dark .widget-item {
  background-color: #374151;
  border-color: #4b5563;
}

.widget-item:hover {
  background-color: #f9fafb;
  border-color: #d1d5db;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.dark .widget-item:hover {
  background-color: #4b5563;
  border-color: #6b7280;
}

.widget-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 0.375rem;
  background-color: #f3f4f6;
  color: #4b5563;
}

.dark .widget-icon {
  background-color: #1f2937;
  color: #d1d5db;
}

.widget-info {
  display: flex;
  flex-direction: column;
  flex: 1;
}

.widget-name {
  font-weight: 500;
  color: #111827;
}

.dark .widget-name {
  color: #f9fafb;
}

.widget-description {
  font-size: 0.75rem;
  color: #6b7280;
  margin-top: 0.25rem;
}

.dark .widget-description {
  color: #9ca3af;
}

.no-results {
  text-align: center;
  padding: 2rem 0;
  color: #6b7280;
}

.dark .no-results {
  color: #9ca3af;
}

.dashboard-container {
  padding: 0 1.5rem;
  max-width: 1600px;
  margin: 0 auto;
}

/* Empty dashboard call to action */
.empty-dashboard-cta {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 80vh;
}

.add-widget-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.25rem;
  background-color: #3b82f6;
  color: white;
  font-weight: 500;
  border-radius: 0.75rem;
  box-shadow: 0 2px 4px rgba(59, 130, 246, 0.3);
  transition: all 0.2s ease;
}

.add-widget-button:hover {
  background-color: #2563eb;
  box-shadow: 0 4px 6px rgba(59, 130, 246, 0.4);
  transform: translateY(-1px);
}

.dark .add-widget-button {
  box-shadow: 0 2px 4px rgba(59, 130, 246, 0.5);
}

.dark .add-widget-button:hover {
  box-shadow: 0 4px 6px rgba(59, 130, 246, 0.6);
}